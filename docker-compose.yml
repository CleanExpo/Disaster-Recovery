version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mass-webpage-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mass_webpage_creations
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mass_webpage_creations"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mass-webpage-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/mass_webpage_creations
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads

  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: disaster-recovery-dev
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      DATABASE_URL: file:./dev.db
      NODE_ENV: development
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_data: