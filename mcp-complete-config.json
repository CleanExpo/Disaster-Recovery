{
  "mcpServers": {
    "playwright": {
      "name": "Playwright MCP",
      "description": "Browser automation and visual testing",
      "command": "npx",
      "args": ["@playwright/mcp@latest"],
      "capabilities": [
        "browser_automation",
        "screenshot_capture",
        "design_extraction",
        "visual_testing",
        "performance_monitoring"
      ],
      "status": "configured"
    },
    "context7": {
      "name": "Context7 MCP",
      "description": "Contextual documentation and code assistance",
      "command": "node",
      "args": ["D:\\Disaster Recovery\\context7\\dist\\index.js"],
      "capabilities": [
        "documentation_retrieval",
        "code_examples",
        "best_practices",
        "api_documentation",
        "framework_guidance"
      ],
      "status": "built",
      "setup": {
        "build": "cd \"D:\\Disaster Recovery\\context7\" && npm install && npm run build"
      }
    },
    "sequential-thinking": {
      "name": "Sequential Thinking MCP",
      "description": "Complex workflow orchestration and deployment",
      "command": "node",
      "args": ["D:\\Disaster Recovery\\WSL-Deployment-Sequential-Thinking\\dist\\cli.js"],
      "capabilities": [
        "deployment_orchestration",
        "workflow_management",
        "pipeline_execution",
        "environment_management",
        "rollback_capability"
      ],
      "status": "built",
      "setup": {
        "build": "cd \"D:\\Disaster Recovery\\WSL-Deployment-Sequential-Thinking\" && npm install && npm run build"
      }
    }
  },
  "orchestration": {
    "agent": "MCP-Management-Agent",
    "version": "1.0.0",
    "workflows": {
      "design-extraction": {
        "description": "Extract design system from target website",
        "steps": [
          {
            "mcp": "playwright",
            "action": "analyse",
            "params": {
              "viewport": [1440, 900],
              "capture": ["colours", "typography", "spacing", "components"]
            }
          },
          {
            "mcp": "context7",
            "action": "getDocumentation",
            "params": {
              "topics": ["design-system", "css-patterns", "component-library"]
            }
          }
        ]
      },
      "full-deployment": {
        "description": "Deploy application to production",
        "steps": [
          {
            "mcp": "sequential-thinking",
            "action": "pre-checks",
            "params": {
              "environment": "production",
              "validate": ["dependencies", "environment", "configuration"]
            }
          },
          {
            "mcp": "sequential-thinking",
            "action": "build",
            "params": {
              "mode": "production",
              "optimise": true
            }
          },
          {
            "mcp": "playwright",
            "action": "test",
            "params": {
              "suite": "production",
              "headless": true
            }
          },
          {
            "mcp": "sequential-thinking",
            "action": "deploy",
            "params": {
              "target": "vercel",
              "environment": "production"
            }
          }
        ]
      },
      "competitor-analysis": {
        "description": "Analyse competitor website for design patterns",
        "steps": [
          {
            "mcp": "playwright",
            "action": "navigate",
            "params": {
              "url": "${targetUrl}",
              "waitUntil": "networkidle"
            }
          },
          {
            "mcp": "playwright",
            "action": "extractDesign",
            "params": {
              "elements": ["navigation", "hero", "features", "footer"],
              "capture": ["screenshots", "css", "animations"]
            }
          },
          {
            "mcp": "context7",
            "action": "comparePatterns",
            "params": {
              "baseline": "current-design",
              "comparison": "${extracted-design}"
            }
          }
        ]
      },
      "documentation-generation": {
        "description": "Generate comprehensive documentation",
        "steps": [
          {
            "mcp": "context7",
            "action": "scanCodebase",
            "params": {
              "paths": ["src", "components", "lib"],
              "extract": ["components", "functions", "types"]
            }
          },
          {
            "mcp": "playwright",
            "action": "captureComponents",
            "params": {
              "storybook": true,
              "interactive": true
            }
          },
          {
            "mcp": "context7",
            "action": "generateDocs",
            "params": {
              "format": "markdown",
              "include": ["api", "components", "examples"]
            }
          }
        ]
      }
    }
  },
  "configuration": {
    "timeout": 30000,
    "retryCount": 3,
    "logLevel": "info",
    "healthCheck": {
      "enabled": true,
      "interval": 60000,
      "endpoint": "http://localhost:3000/mcp/health"
    },
    "monitoring": {
      "enabled": true,
      "metrics": ["latency", "errors", "throughput", "availability"],
      "alerting": {
        "email": "admin@disasterrecovery.com.au",
        "threshold": {
          "errorRate": 0.05,
          "latency": 5000,
          "availability": 0.99
        }
      }
    }
  },
  "commands": {
    "init": "Initialize all MCP services",
    "status": "Check status of all MCPs",
    "execute": "Execute command on specific MCP",
    "orchestrate": "Run workflow orchestration",
    "troubleshoot": "Diagnose and fix MCP issues",
    "update": "Update MCP configurations"
  }
}